" vim-plug install
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Specify a directory for plugins
call plug#begin('~/.vim/plugged')

" Plugins
Plug 'mileszs/ack.vim'
Plug 'jiangmiao/auto-pairs'
Plug 'chriskempson/base16-vim', {'do': 'git remote add dict_fix https://github.com/danielwe/base16-vim;git pull dict_fix master:dictfix;git checkout dictfix'}
Plug 'editorconfig/editorconfig-vim'
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'
Plug 'sheerun/vim-polyglot'
Plug 'christoomey/vim-tmux-navigator'
Plug 'Alok/notational-fzf-vim'

" Initialize plugin system
call plug#end()

" Allow for loading of project specific vimrc
set exrc
set secure

" set colorscheme via base16 if on mac
if has("unix")
  let s:uname = system("uname")
  if s:uname == "Darwin\n"
    if filereadable(expand("~/.vimrc_background"))
      let base16colorspace=256
      source ~/.vimrc_background
    endif
  endif
endif

" Automatic reloading of .vimrc
augroup reload_vimrc
  autocmd!
  autocmd bufwritepost $MYVIMRC nested source $MYVIMRC
augroup END

" Automatic reloading of all files
set autoread

let mapleader=","

" Removes highlight of your last search
noremap <C-c> :nohl<CR>

" Removes all trailing whitespace
autocmd BufWritePre * %s/\s\+$//e

" Buffer navigation
map <Leader>e :bn<cr>
map <Leader>E :bp<cr>
map <Leader>x :bd<cr>
set hidden

" Syntax highlighting
filetype off
filetype plugin indent on
syntax on

" Turn off bell
set vb t_vb=

" Make search case insensitive
set hlsearch
set incsearch
set ignorecase
set smartcase

" Disable backup files
set nobackup
set nowritebackup
set noswapfile

" Line numbers
set number
set relativenumber

" Fix backspace issues
set backspace=indent,eol,start

" Auto wrap git commits
au FileType gitcommit set tw=72

" easy pane switching
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" jsx settings
let g:jsx_ext_required = 0

" ignore tmp files
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*/bower_components,*/node_modules,*_build,*.pyc,*.mypy_cache*,*/vendor

" FZF settings
map <Leader>t :Files<cr>
map <Leader>T :Buffers<cr>

" Go
let g:go_fmt_command = "goimports"

" Notational velocity settings
let g:nv_search_paths = ['~/Dropbox/Notes']
let g:nv_default_extension = '.txt'
map <Leader>n :NV<cr>

" Ripgrep
map <Leader>r :Rg<cr>
